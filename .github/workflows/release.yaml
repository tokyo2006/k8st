name: Publish Python Package

on:
  push:
    branches: 
      - main
    tags: 
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.2'
        
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Determine version bump
        if: |
            ${{ !contains(github.event.head_commit.message, 'chore: bump version') && github.ref == 'refs/heads/main' }}
        id: bump
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
          default_bump: patch

      - name: Update version
        if: steps.bump.outputs.new_version != ''
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          poetry version ${{steps.bump.outputs.new_version}}
          git add pyproject.toml
          git commit -m "chore: bump version to ${{steps.bump.outputs.new_version}}"
          git tag -a "v${{steps.bump.outputs.new_version}}" -m "Release version ${{steps.bump.outputs.new_version}}"
          git push
          git push --tags

      - name: Build package
        run: poetry build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.K8ST_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true
